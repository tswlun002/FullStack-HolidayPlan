
name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 20
      uses: actions/setup-java@v3
      with:
        java-version: '20'
        distribution: 'temurin'
        cache: maven
    - name: install back-end
      run: mvn -B  package --file back-end/pom.xml
    - name: build  back-end image
      run: docker compose build  tour-server
 
     # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    env:
      TOUR_USER: ${{secrets.TOUR_USER}}
      PASSWORD: ${{secrets.PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_SERVICE: ${{secrets.DATABASE_SERVICE}}
      SERVER_SERVICE: ${{secrets.SERVER_SERVICE}}
      CLIENT_SERVICE: ${{secrets.CLIENT_SERVICE}}
      DATABASE_TAG: ${{secrets.DATABASE_TAG}}
      SERVER_TAG: ${{secrets.SERVER_TAG}}
      CLIENT_TAG: ${{secrets.CLIENT_TAG}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      SERVER_PORT: ${{secrets.SERVER_PORT}}
      CLIENT_PORT: ${{secrets.CLIENT_PORT}}
      BASE_URL: ${{secrets.BASE_URL}}
      JWT_SIGNING_KEY: ${{secrets.JWT_SIGNING_KEY}}
      JWT_ACCESS_TOKEN_PERIOD: ${{secrets.JWT_ACCESS_TOKEN_PERIOD}}
      JWT_REFRESH_TOKEN_PERIOD: ${{secrets.JWT_REFRESH_TOKEN_PERIOD}}
      DATABASE_URL: ${{secrets.DATABASE_URL}}
      DEFAULT_ROLE: ${{secrets.DEFAULT_ROLE}}
      DEFAULT_PERMISSIONS: ${{secrets.DEFAULT_PERMISSIONS}}
      EMAIL: ${{secrets.EMAIL}}
      TOUR_MANAGER: ${{secrets.TOUR_MANAGER}}
      LOGO: ${{secrets.LOGO}}
      ABOUT: ${{secrets.ABOUT}}
      PHONE: ${{secrets.PHONE}}
      ADDRESS: ${{secrets.ADDRESS}}
      SOCIALS: ${{secrets.SOCIALS}}
      NAME: ${{secrets.NAME}}
      APP: ${{secrets.APP}}
  publish-job:
   runs-on: ubuntu-latest
   needs: build
   steps: 
   - uses: actions/checkout@v3
   - uses: actions/setup-java@v3
     with:
        java-version: '20'
        distribution: 'temurin'
   - name: verify package 
     run: |
      cd back-end
      mvn --batch-mode  --update-snapshots verify
      cd ..
   - name: copy target directory
     run: mkdir staging && cp target/*.jar staging
   - uses: actions/upload-artifact@v3
     with: 
      name: Package
      path: staing
  

